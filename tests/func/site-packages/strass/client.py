import sys
import os.path
import datetime
import unittest

from selenium.webdriver import PhantomJS


class Client(object):
    """Client HTTP pour tester fonctionnellement Strass

    Adapteur du pilote Selenium, avec une interface inspirée de Nightwatch.js,
    et quelques paramètres spécifiques à Strass."""

    def __init__(self):
        self.driver = PhantomJS()
        self.driver.set_window_size(1120, 550)

    def __del__(self):
        self.driver.quit()

    def get(self, url=None):
        url = url or os.environ.get('STRASS_TEST_SERVER', 'http://localhost:8000')
        self.driver.get(url)
        return self

    def click(self, selector):
        self.find(selector).click()
        return self

    def fill(self, selector, value):
        if isinstance(value, datetime.date):
            self.find(selector + ' input.day').send_keys(str(value.day))
            self.find(selector + ' input.month').send_keys(str(value.month))
            self.find(selector + ' input.year').send_keys(str(value.year))
        else:
            self.find(selector).send_keys(value)
        return self

    def find(self, selector):
        return self.driver.find_element_by_css_selector(selector)

    def screenshot(self, filename):
        self.driver.get_screenshot_as_file(filename)
        sys.stderr.write("Capture d'écran enregistrée dans %r\n" % (filename,))
        return self

    def __getattr__(self, name):
        return getattr(self.driver, name)


class ClientTestCase(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.client = Client()

    @classmethod
    def tearDownClass(cls):
        del cls.client

    def tearDown(self):
        for test_case, exc_info in self._outcome.errors:
            if not exc_info:
                continue

            self.client.screenshot(os.path.join(
                os.environ['STRASS_TEST_REPORTS'], self.id() + '.png'))
            break

        super(ClientTestCase, self).tearDown()
